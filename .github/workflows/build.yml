name: Build
on:
  pull_request:
  push:
    branches:
      - master
      - releases/*
    tags:

jobs:
  units:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npm run lint
      - run: npm test

      - name: Check dist/
        run: |
          npm run package
          if ! git diff --quiet --ignore-cr-at-eol --exit-code dist/; then
            echo "::error file=dist/index.js::Please run 'npm run package' before pushing/merging"
            exit 1
          fi

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: ./
        id: version
        with:
          base: "refs/heads/releases/x1"
      - run: |
          if [[ "${{steps.version.outputs.base}}" != "x1" ]]; then
            exit 1
          fi
          if [[ "${{steps.version.outputs.next}}" != "x1.0" ]]; then
            exit 1
          fi

  release:
    runs-on: ubuntu-latest
    needs: [units,test]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/releases/')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Find next version
        id: version
        uses: ./

      - name: Create Changelog
        id: changelog
        run: |
          git log ${{ steps.version.outputs.last }}..${{ github.sha }} --pretty=oneline

      - name: Create a release
        #uses: actions/create-release@v1
        # NOTE workaround, since actions/create-release@v1 does not support "commitish" parameter, see https://github.com/actions/create-release/pull/32
        uses: actions/github-script@v2
        with:
          #tag_name: ${{ steps.next_version.outputs.result }}
          #release_name: ${{ steps.next_version.outputs.result }}
          #commitish: ${{ github.sha }}
          #body: >
          #  Automatic release of ${{ steps.next_version.outputs.result }}
          script: |
            const fs = require("fs");
            const util = require("util");
            const readFile = util.promisify(fs.readFile);

            const changelog = await readFile("${{ runner.temp }}/CHANGELOG.md");

            await github.repos.createRelease({
              ...context.repo,
              name: "${{ steps.version.outputs.next }}",
              tag_name: "${{ steps.version.outputs.next }}",
              body: "Automatic release of ${{ github.repository }} ${{ steps.version.outputs.next }}\n\n" + changelog,
              target_commitish: context.sha,
            });
